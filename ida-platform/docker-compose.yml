version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/datalog:/datalog
    networks:
      bridge:
        aliases:
          - zookeeper

  kafka:
    image: confluentinc/cp-kafka:5.1.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      bridge:
        aliases:
          - kafka

  kafka-connect:
    build: ./kafka-connect/
    ports:
      - '8083:8083'
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
      - kafka
    networks:
      bridge:
        aliases:
          - kafka-connect

  mosquitto:
    image: eclipse-mosquitto:1.5.5
    expose:
      - '1883'
    ports:
      - '1883:1883'
    networks:
      bridge:
        aliases:
          - mosquitto

  kafka-consumer-flink:
    image: flink-consumer
    environment:
      COVIDEAGLE_KAFKA_TOPIC: 'mqtt.covideagle'
      KAFKA_SERVER: 'kafka:9092'
      ZOOKEEPER_SERVER: 'zookeeper:32181'
      ELASTICSEARCH_SERVER: 'elasticsearch:9200'
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - bridge

  elasticsearch:
    image: elasticsearch:7.7.1
    expose:
      - '9200'
      - '9300'
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - 'discovery.type=single-node'
    networks:
      bridge:
        aliases:
          - elasticsearch

  kibana:
    image: kibana:7.7.1
    expose:
      - '5601'
    ports:
      - '5601:5601'
    networks:
      bridge:
        aliases:
          - kibana
networks:
  bridge:
    driver: bridge
